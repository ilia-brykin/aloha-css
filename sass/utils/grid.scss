@import "aloha_prefix";
@import "breakpoint";
@import "mixins";
@import "funktions";

$column_gabs: (
  0: 0rem,
  1: 0.25rem,
  2: 0.5rem,
  3: 0.75rem,
  4: 1rem,
  5: 1.25rem,
  6: 1.5rem,
  7: 1.75rem,
  8: 2rem,
) !default;

$column_count: 12;

.#{$aloha-prefix}columns {
  display: flex;
  --columnGap: 0.75rem;
  margin-left: calc(-1 * var(--columnGap));
  margin-right: calc(-1 * var(--columnGap));
  > .#{$aloha-prefix}column {
    padding-left: var(--columnGap);
    padding-right: var(--columnGap);
  }
}
.#{$aloha-prefix}column {
  display: block;
  flex-basis: 0;
  flex-grow: 1;
  flex-shrink: 1;
}


$breakpoints-grid: prepend($breakpoints, (class: null));

@each $breakpoint in $breakpoints-grid {
  $breakpoint-class: map-get($breakpoint, "class");
  $breakpoint-min: map-get($breakpoint, "min");
  $breakpoint-max: map-get($breakpoint, "max");

  @for $i from 1 through $column_count {
    @include media-width-all($breakpoint-min, $breakpoint-max) {
      .#{$aloha-prefix}columns_count_#{$i}#{ getBreakpointWithPrefix($breakpoint-class) } {
        --columnCount: #{$i};
        flex-wrap: wrap;
      }
    }
  }

  @each $gab-key, $gab-value in $column_gabs {
    @include media-width-all($breakpoint-min, $breakpoint-max) {
      .#{$aloha-prefix}columns_gab_#{$gab-key}#{ getBreakpointWithPrefix($breakpoint-class) } {
        --columnGap: #{$gab-value};
      }
    }
  }

  @for $i from 1 through $column_count {
    @include media-width-all($breakpoint-min, $breakpoint-max) {
      .#{$aloha-prefix}column_#{$i}#{ getBreakpointWithPrefix($breakpoint-class) } {
        flex: none;
        width: calc(100% / var(--columnCount) * #{$i});
        padding-left: var(--columnGap);
        padding-right: var(--columnGap);
      }
    }
  }
  @for $i from 1 through $column_count - 1 {
    @include media-width-all($breakpoint-min, $breakpoint-max) {
      .#{$aloha-prefix}column_offset_#{$i}#{ getBreakpointWithPrefix($breakpoint-class) } {
        margin-left: calc(100% / var(--columnCount) * #{$i});
      }
    }
  }
}
